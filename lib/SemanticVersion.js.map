{"version":3,"sources":["../src/SemanticVersion.js"],"names":["SemanticVersion","versionString","major","minor","build","revision","undefined","ar","split","length","_tryParseInt","val","res","parseInt","isNaN","Error","version","compareTo","console","log"],"mappings":"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","file":"SemanticVersion.js","sourcesContent":["\nexport default class SemanticVersion {\n\n  constructor(versionString) {\n    this.major = null;\n    this.minor = null;\n    this.build = null;\n    this.revision = null;\n\n    if (versionString === undefined || versionString == \"\")\n      versionString = \"0\";\n\n    let ar = versionString.split(\".\");\n\n    if (ar.length >= 1 && ar[0] != \"\") {\n      this.major = this._tryParseInt(ar[0]);\n    }\n    if (ar.length >= 2 && ar[1] != \"\") {\n      this.minor = this._tryParseInt(ar[1]);\n    }\n    if (ar.length >= 3 && ar[2] != \"\") {\n      this.build = this._tryParseInt(ar[2]);\n    }\n    if (ar.length >= 4 && ar[3] != \"\") {\n      this.revision = this._tryParseInt(ar[3]);\n    }\n  }\n\n  _tryParseInt(val) {\n    let res = parseInt(val);\n    if (isNaN(res))\n      throw new Error(`invalid value: ${val}`);\n    return res;\n  }\n\n  toString() {\n    let res = \"\" + this.major;\n    if (this.minor)\n      res += \".\" + this.minor;\n    if (this.build)\n      res += \".\" + this.build;\n    if (this.revision)\n      res += \".\" + this.revision;\n    return res;\n  }\n\n  equalTo(version) {\n    //console.log(\"equalTo\", this.compareTo(version))\n    return this.compareTo(version) == 0;\n  }\n\n  greaterTo(version) {\n    //console.log(\"greaterTo\", this.compareTo(version))\n    return this.compareTo(version) > 0;\n  }\n\n  greaterOrEqualTo(version) {\n    //console.log(\"greaterOrEqualTo\", this.compareTo(version))\n    return this.compareTo(version) >= 0;\n  }\n\n  lessOrEqualTo(version) {\n    console.log(\"lessOrEqualTo\", this.compareTo(version))\n    return this.compareTo(version) <= 0;\n  }\n\n  compareTo(version) {\n    if (!version)\n      return 1;\n\n    if (this.major > version.major)\n      return 1;\n\n    if (this.major < version.major)\n      return -1;\n\n    if (this.minor > version.minor)\n      return 1;\n\n    if (this.minor < version.minor)\n      return -1;\n\n    if (this.build > version.build)\n      return 1;\n\n    if (this.build < version.build)\n      return -1;\n\n    if (this.revision > version.revision)\n      return 1;\n\n    if (this.revision < version.revision)\n      return -1;\n\n    return 0;\n  }\n}"]}